@model ClientsideRouteSpike.Models.ParkingPermit

@{
    ViewBag.Title = "Backbone";
    Model.Step = "step1";
}
<script type="text/javascript">

    $(function() {
        (function($) {
            var parkingPermit = {
                acceptsTerms: ko.observable(@Model.AcceptsTerms.ToString().ToLower()),
                firstName: ko.observable("@Model.FirstName"),
                lastName: ko.observable("@Model.LastName"),
                email: ko.observable("@Model.Email"),
                number: ko.observable("@Model.Number"),
                street: ko.observable("@Model.Street"),
                suburb: ko.observable("@Model.Suburb"),
                step: ko.observable("@Model.Step")
            };

            ko.applyBindings(parkingPermit);

            function validateStep(selector) {
                var valid = true,
                    $form = $("form");
                $form.removeData('validator');
                $form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse($form);
                var validator = $("form").validate();

                $(selector).find('input').each(function() {
                    if (!validator.element(this)) {
                        valid = false;
                    }
                });
                return valid;
            }

            var StateModel = Backbone.Model.extend({
                defaults: { state: parkingPermit.step() }
            });

            function stepForward(selector) {
//                var i = 0,
//                    items = $(".wizard-content"),
//                    count =  $(".wizard-content").length;

//                while (parseInt($(selector).css('left').replace( /[^-\d\.]/g , '')) > 0) {
//                    for (; i < count; i++) {
//                        var newLeft = ($(items[i]).css('left').replace( /[^-\d\.]/g , '') - 1000) + "px";
//                        $(items[i]).animate({ left: newLeft }, 200);
//                    }
//                }

                $(".wizard-content").each(function() {
                    var newLeft = ($(this).css('left').replace( /[^-\d\.]/g , '') - 1000) + "px";
                    $(this).animate({ left: newLeft }, 200);
                });
            }

            var WizardView = Backbone.View.extend({
                model: new StateModel(),

                initialize: function(options) {
                    this.model.bind("change", this.render, this);
                    this.parkingPermit = options.parkingPermit;
                    this.router = options.router;
                    this.render();
                },

                render: function() {
                    switch (this.model.get("state")) {
                    case "start":
                    case "terms":
                        var step1 = new TermsView({ el: $("#content-holder"), router:this.router,  parkingPermit: this.parkingPermit });
                        break;
                    case "customer":
                        var step2 = new CustomerView({ el: $("#content-holder"), router:this.router, parkingPermit: this.parkingPermit });
                        break;
                    case "address":
                        var step3 = new AddressView({ el: $("#content-holder"), router:this.router, parkingPermit: this.parkingPermit });
                        break;
                    }
                }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            /// View that contains the Terms & conditions
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

            var TermsView = Backbone.View.extend({
                template: Handlebars.compile($('#step1-template').html()),

                events: {
                    'click input#step2': 'goToStep2'
                },

                initialize: function(options) {
                    _.bindAll(this, 'render'); // fixes loss of context for 'this' within methods
                    this.router = options.router;
                    this.parkingPermit = options.parkingPermit;
                    this.render(); // Render on initialise
                },

                render: function() {
                    $('.wizard-content').css('left', '');
                    //$(this.el).html(this.template());
                },

                goToStep2: function() {
                    if (validateStep('#terms')) {
                        //this.wizard.model.set("state", "customer");
                        this.router.navigate("/step2", true);
                    }
                }
            });


            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            /// View that contains the Customer inputs
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

            var CustomerView = Backbone.View.extend({

                events: {
                    'click input#step3': 'goToStep3'
                },

                initialize: function(options) {
                    _.bindAll(this, 'render'); // fixes loss of context for 'this' within methods
                    this.router = options.router;
                    this.parkingPermit = options.parkingPermit;
                    this.render(); // Render on initialise
                },

                render: function() {
                    //$(this.el).html(this.template());
                    stepForward();
                },

                goToStep3: function() {
                    if (validateStep('#customer')) {
                        //this.wizard.model.set("state", "address");
                        this.router.navigate("/step3", true);
                    }
                }
            });


            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            /// View that contains the Address inputs
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

            var AddressView = Backbone.View.extend({

                initialize: function(options) {
                    _.bindAll(this, 'render'); // fixes loss of context for 'this' within methods
                    this.router = options.router;
                    this.parkingPermit = options.parkingPermit;
                    this.render(); // Render on initialise
                },

                render: function() {
                    //$(this.el).html(this.template());
                    stepForward();
                }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            /// Define our routes
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        

            var AppRouter = Backbone.Router.extend({
                routes: {
                    "": "start",
                    "step1": "termsstep",
                    "step2": "customerstep",
                    "step3": "addressstep"
                },

//            start: function() {
//                wizard.model.set("state", "start");
//            },

                termsstep: function() {
                    wizard.model.set("state", "terms");
                },

                customerstep: function() {
                    wizard.model.set("state", "customer");
                },

                addressstep: function() {
                    wizard.model.set("state", "address");
                }
            });

            // Instantiate the router & wizard view (defaults to displaying terms first)
            var app_router = new AppRouter(),
                wizard = new WizardView({ router: app_router, parkingPermit: parkingPermit });

            // Start the history engine
            Backbone.history.start({ pushState: false });
            app_router.navigate("@Model.Step", true); // Ensure the url matches the selected step
        })(jQuery);
    });
</script>

<h2>Backbone</h2>



@using(Html.BeginForm())
{
    @Html.ValidationSummary(false)
    <div class="container">
        <div id="content-holder">
            @Html.Partial("_Terms")

            @Html.Partial("_Customer")

            @Html.Partial("_Address")
           
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>

    </div>
}    


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
